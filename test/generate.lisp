(define for-each (lambda (xs f) (if xs ((lambda ()
  (f (car xs))
  (for-each (cdr xs) f)
)))))
(define generate-each (lambda (xs)
  (define next (lambda (return)
    (for-each xs (lambda (x)
      (set! return (call/cc (lambda (resume)
        (set! next resume)
        (return x)
      )))
    ))
    (return 'end)
  ))
  (lambda () (call/cc next))
))
(define generate-digit (generate-each '(() (x) (x x))))
(print (generate-digit))
(print (generate-digit))
(print (generate-digit))
(print (generate-digit))
(print (generate-digit))
