(print (reset (lambda ()
  (shift (lambda (k) (cons '(x) (k ()))))
  ()
)))
(print (reset (lambda ()
  (shift (lambda (k) (cons '(x) (k ()))))
  (shift (lambda (k) (cons '(x x) (k ()))))
  ()
)))
((lambda ()
  (define yield (lambda (x)
    (shift (lambda (k) (cons x (k ()))))
  ))
  (print (reset (lambda ()
    (yield '(x))
    (yield '(x x))
    (yield '(x x x))
    ()
  )))
))
((lambda ()
  (define for-each (lambda (xs f) (if xs ((lambda ()
    (f (car xs))
    (for-each (cdr xs) f)
  )))))
  (define yield (lambda (x)
    (shift (lambda (k) (cons x (lambda () (k ())))))
  ))
  (define lazy-each (lambda (xs f) (if xs ((lambda ()
    (f (car xs))
    (lazy-each ((cdr xs)) f)
  )))))
  (define list->lazy (lambda (xs)
    (reset (lambda () (for-each xs yield)))
  ))
  (define for-each->lazy (lambda (xs) (reset (lambda ()
    (for-each xs (lambda (x)
      (shift (lambda (k) (cons x (lambda () (k ())))))
    ))
  ))))
  (lazy-each (reset (lambda ()
    (yield '(x))
    (yield '(x x))
    (yield '(x x x))
  )) print)
  (lazy-each (list->lazy '((y) (y y) (y y y))) print)
  (lazy-each (for-each->lazy '((x) (x x) (x x x))) print)
))
